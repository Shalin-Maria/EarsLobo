<html>
  <body id="defBG">
    <div class="container p-5 my-3 w-100 border rounded bg-white">
      <h1 class="display-5" style="padding-bottom:20px">
        <strong><%= "Testing " + @client.first_name + " " + @client.last_name %></strong>
      </h1>

      <!-- Include Bootstrap JS -->
      <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
      <!-- Include jQuery -->
      <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
      <!-- Include Bootstrap Toggle CSS and JS -->
      <link href="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/css/bootstrap4-toggle.min.css" rel="stylesheet">
      <script src="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/js/bootstrap4-toggle.min.js"></script>

      <style>
        div.sticky {
          position: -webkit-sticky; /* Safari */
          position: sticky;
          top: 0;
        }

        .left-column {
          background-color: lightblue;
        }

        .right-column {
          background-color: lightpink;
        }

        .ear-advantage {
          background-color: white;
        }

        .ear-advantage.positive {
          background-color: lightblue;
        }

        .ear-advantage.negative {
          background-color: lightpink;
        }

        /* Center buttons in the table cells */
        .btn-group-toggle {
          display: flex;
          justify-content: center;
          align-items: center;
          height: 100%;
        }

        /* Make the font larger */
        .btn.btn-outline-primary {
          font-size: 16px; /* Adjust the font size as needed */
          margin: 5px; /* Add some margin to separate the buttons */
          min-width: 40px; /* Adjust the minimum width as needed */
        }

        .active {
          background-color: #007bff !important;
          color: white !important;
        }
      </style>

      <div class="container">
        <%= form_with model: [@client, @week_one], local: true, html: { multipart: true } do |f| %>
          <div class="row">
            <div class="col-sm">
              <div class="form-group row">
                <p>Ear Dominance</p>
                <button id="setLeftDominance" type="button" class="btn btn-info">Set Left Dominance</button>
                <button id="setRightDominance" type="button" class="btn btn-info">Set Right Dominance</button>
              </div>
              <div class="form-group row">
                <p>Audio Controls</p>
                <button id="playButton" type="button">Play</button>
                <button id="pauseButton" type="button">Pause</button>
              </div>
              <div class="form-group row">
                <label for="exampleLabel">Label</label>
                <%= f.text_field :label, class: "form-control", type: "text", id: "exampleLabel", value: "Rddt List One" %>
              </div>
              <div class="form-group row">
                <label for="clientName">Client</label>
                <input class="form-control" type="text" id="clientName" placeholder="<%= @client.first_name + ' ' + @client.last_name %>" readonly>
              </div>
              <div class="form-group row">
                <label for="testType">Type</label>
                <input class="form-control" type="text" id="testType" placeholder="RDDT" readonly>
              </div>
              <hr/>
              <div class="form-group row">
                <label for="conditionSelect">Condition</label>
                <input class="form-control" type="text" id="conditionSelect" placeholder="" readonly>
              </div>
              <hr/>
              <div class="sticky">
                <p>Notes</p>
                <%= f.text_area :notes, class: 'form-control', rows: '3' %>
                <hr/>
                <!-- AUDIO PLAYER FOR AUDIO FILES STORED IN ASSETS/AUDIO/ETC.MP3 -->
                <%= audio_tag "1-pair Dichotic Digits, List 1_Left_HRTF.wav", id: "leftEarAudio", controls: false %>
                <%= audio_tag "1-pair Dichotic Digits, List 1_Right_HRTF.wav", id: "rightEarAudio", controls: false %>
                <hr/>
                <!-- Table for ear advantage percentage that is calculated in the script -->
                <p>Scores:</p>
                <table class="table table-sm table-bordered m1-4" style="max-width: 25rem;">
                  <thead>
                    <tr>
                      <th scope="col">Pairs</th>
                      <th scope="col">Left</th>
                      <th scope="col">Right</th>
                      <th scope="col">Ear Adv</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% [1, 2, 3].each do |i| %>
                      <tr>
                        <th scope="row"><%= i %></th>
                        <td class="left-column"><span id="column1Group<%= i %>-percent">0</span>%</td>
                        <td class="right-column"><span id="column2Group<%= i %>-percent">0</span>%</td>
                        <td class="ear-advantage"><span id="Group<%= i %>advantage-Diff">0</span>%</td>
                      </tr>
                    <% end %>
                  </tbody>
                </table>
                <!-- Table for ear score -->
                <label for="read-Only">Ear Advantage</label>
                <input class="form-control" type="text" id="read-Only" value="" readonly>
                <span hidden id="advantage-Name"></span>
                <label for="read-Only">Interpretation</label>
                <input class="form-control" type="text" id="read-Only-diag" value="" readonly>
                <span hidden id="Diagnosis"></span>
              </div>
              <!-- Hidden fields for submitting data -->
              <%= f.hidden_field :client_name, value: "Example user" %>
              <%= f.hidden_field :test_type, value: "RDDT" %>
              <%= f.hidden_field :left_score2, id: "left_score" %>
              <%= f.hidden_field :right_score2, id: "right_score" %>
              <%= f.hidden_field :ear_advantage, id: "ear_advantage" %>
              <%= f.hidden_field :ear_advantage_score, id: "ear_advantage_score" %>
              <%= f.hidden_field :left_score1, id: "col1G1" %>
              <%= f.hidden_field :right_score1, id: "col2G1" %>
              <%= f.hidden_field :left_score3, id: "col1G3" %>
              <%= f.hidden_field :right_score3, id: "col2G3" %>
              <%= f.hidden_field :G1adv, id: "G1adv" %>
              <%= f.hidden_field :G3adv, id: "G3adv" %>
              <%= f.hidden_field :interpretation, id: "interpretation" %>
              <%= f.hidden_field :right_ear_decibel, id: "rightEarDecibelField" %>
              <%= f.hidden_field :left_ear_decibel, id: "leftEarDecibelField" %>
              <%= f.submit "Submit", class: "btn btn-primary btn-block", onclick="populateHiddenFields()" %>
            </div>

            <div class="col-sm">
              <table class="table table-sm table-striped ml-4">
                <thead class="thead-dark">
                  <tr>
                    <th>Number</th>
                    <th>Left</th>
                    <th>Right</th>
                  </tr>
                </thead>
                <tbody>
                  <% 25.times do |i| %>
                    <% nums = [
                      [[10],[2]], [[6],[10]], [[5],[3]], [[6],[9]], [[1],[4]], [[6],[5]], [[8],[10]],
                      [[3],[1]], [[9],[3]], [[2],[8]], [[6],[2]], [[4],[9]], [[1],[3]], [[10],[5]],
                      [[10],[4]], [[3],[9]], [[6],[1]], [[5],[9]], [[3],[10]], [[8],[2]], [[1],[9]],
                      [[9],[6]], [[9],[10]], [[3],[8]], [[4],[5]]
                    ] %>
                    <tr>
                      <td><%= i + 1 %></td>
                      <td>
                        <div class="btn-group-toggle" data-toggle="buttons">
                          <% group_size = nums[i][0].length %>
                          <% nums[i][0].each do |num| %>
                            <label class="btn btn-outline-primary column1Group<%= group_size %>-button">
                              <input type="checkbox" name="column1[<%= i %>][]" value="<%= num %>"> <%= num %>
                            </label>
                          <% end %>
                        </div>
                      </td>
                      <td>
                        <div class="btn-group-toggle" data-toggle="buttons">
                          <% group_size = nums[i][1].length %>
                          <% nums[i][1].each do |num| %>
                            <label class="btn btn-outline-primary column2Group<%= group_size %>-button">
                              <input type="checkbox" name="column2[<%= i %>][]" value="<%= num %>"> <%= num %>
                            </label>
                          <% end %>
                        </div>
                      </td>
                    </tr>
                  <% end %>
                </tbody>
              </table>
            </div>
          </div>
        <% end %>

        <!-- Scripts -->
        <script>
          document.addEventListener('DOMContentLoaded', (event) => {
            const checkboxes = document.querySelectorAll('input[type="checkbox"]');
            const column1Group1Percent = document.getElementById("column1Group1-percent");
            const column1Group2Percent = document.getElementById("column1Group2-percent");
            const column1Group3Percent = document.getElementById("column1Group3-percent");
            const column2Group1Percent = document.getElementById("column2Group1-percent");
            const column2Group2Percent = document.getElementById("column2Group2-percent");
            const column2Group3Percent = document.getElementById("column2Group3-percent");

            const advantageDiffGroup1 = document.getElementById("Group1advantage-Diff");
            const advantageDiffGroup2 = document.getElementById("Group2advantage-Diff");
            const advantageDiffGroup3 = document.getElementById("Group3advantage-Diff");

            const advantageName = document.getElementById("advantage-Name");
            const testDiagnosis = document.getElementById("Diagnosis");
            const readOnly = document.getElementById("read-Only");
            const readOnlyDiag = document.getElementById("read-Only-diag");

            function updatePercentages() {
              const checkedCount1Group1 = document.querySelectorAll(".column1Group1-button input[type='checkbox']:checked").length;
              const totalCountColumn1Group1 = document.querySelectorAll(".column1Group1-button input[type='checkbox']").length;
              const percentColumn1Group1 = ((checkedCount1Group1 / totalCountColumn1Group1) * 100).toFixed(2);
              column1Group1Percent.textContent = percentColumn1Group1;

              const checkedCount1Group2 = document.querySelectorAll(".column1Group2-button input[type='checkbox']:checked").length;
              const totalCountColumn1Group2 = document.querySelectorAll(".column1Group2-button input[type='checkbox']").length;
              const percentColumn1Group2 = ((checkedCount1Group2 / totalCountColumn1Group2) * 100).toFixed(2);
              column1Group2Percent.textContent = percentColumn1Group2;

              const checkedCount1Group3 = document.querySelectorAll(".column1Group3-button input[type='checkbox']:checked").length;
              const totalCountColumn1Group3 = document.querySelectorAll(".column1Group3-button input[type='checkbox']").length;
              const percentColumn1Group3 = ((checkedCount1Group3 / totalCountColumn1Group3) * 100).toFixed(2);
              column1Group3Percent.textContent = percentColumn1Group3;

              const checkedCount2Group1 = document.querySelectorAll(".column2Group1-button input[type='checkbox']:checked").length;
              const totalCountColumn2Group1 = document.querySelectorAll(".column2Group1-button input[type='checkbox']").length;
              const percentColumn2Group1 = ((checkedCount2Group1 / totalCountColumn2Group1) * 100).toFixed(2);
              column2Group1Percent.textContent = percentColumn2Group1;

              const checkedCount2Group2 = document.querySelectorAll(".column2Group2-button input[type='checkbox']:checked").length;
              const totalCountColumn2Group2 = document.querySelectorAll(".column2Group2-button input[type='checkbox']").length;
              const percentColumn2Group2 = ((checkedCount2Group2 / totalCountColumn2Group2) * 100).toFixed(2);
              column2Group2Percent.textContent = percentColumn2Group2;

              const checkedCount2Group3 = document.querySelectorAll(".column2Group3-button input[type='checkbox']:checked").length;
              const totalCountColumn2Group3 = document.querySelectorAll(".column2Group3-button input[type='checkbox']").length;
              const percentColumn2Group3 = ((checkedCount2Group3 / totalCountColumn2Group3) * 100).toFixed(2);
              column2Group3Percent.textContent = percentColumn2Group3;

              const group1Advantage = (percentColumn2Group1 - percentColumn1Group1).toFixed(2);
              const group2Advantage = (percentColumn2Group2 - percentColumn1Group2).toFixed(2);
              const group3Advantage = (percentColumn2Group3 - percentColumn1Group3).toFixed(2);

              advantageDiffGroup1.textContent = group1Advantage;
              advantageDiffGroup2.textContent = group2Advantage;
              advantageDiffGroup3.textContent = group3Advantage;

              const earAdvantageCells = document.querySelectorAll('.ear-advantage');
              earAdvantageCells.forEach(cell => {
                const value = parseFloat(cell.textContent);
                if (value < 0) {
                  cell.style.backgroundColor = 'lightblue';
                } else if (value > 0) {
                  cell.style.backgroundColor = 'lightpink';
                } else {
                  cell.style.backgroundColor = 'white';
                }
              });

              advantageName.textContent = group2Advantage > 0 ? 'Right' : 'Left';
              readOnly.value = advantageName.textContent;

              testDiagnosis.textContent = group2Advantage > 0 ? 'Right Ear Advantage' : 'Left Ear Advantage';
              readOnlyDiag.value = testDiagnosis.textContent;
            }

            function populateHiddenFields() {
              document.getElementById("left_score").value = column1Group2Percent.textContent;
              document.getElementById("right_score").value = column2Group2Percent.textContent;
              document.getElementById("ear_advantage").value = advantageName.textContent;
              document.getElementById("ear_advantage_score").value = advantageDiffGroup2.textContent;
              document.getElementById("col1G1").value = column1Group1Percent.textContent;
              document.getElementById("col2G1").value = column2Group1Percent.textContent;
              document.getElementById("col1G3").value = column1Group3Percent.textContent;
              document.getElementById("col2G3").value = column2Group3Percent.textContent;
              document.getElementById("G1adv").value = advantageDiffGroup1.textContent;
              document.getElementById("G3adv").value = advantageDiffGroup3.textContent;
              document.getElementById("interpretation").value = testDiagnosis.textContent;
            }

            checkboxes.forEach(function(checkbox) {
              checkbox.addEventListener('change', function() {
                const label = this.closest('label');
                if (this.checked) {
                  label.classList.add('active');
                } else {
                  label.classList.remove('active');
                }
                updatePercentages();
              });
            });

            document.getElementById('playButton').addEventListener('click', function() {
              document.getElementById('leftEarAudio').play();
              document.getElementById('rightEarAudio').play();
            });

            document.getElementById('pauseButton').addEventListener('click', function() {
              document.getElementById('leftEarAudio').pause();
              document.getElementById('rightEarAudio').pause();
            });

            document.getElementById('setLeftDominance').addEventListener('click', function() {
              setEarDominance('left');
            });

            document.getElementById('setRightDominance').addEventListener('click', function() {
              setEarDominance('right');
            });

            function setEarDominance(dominance) {
              let rightEarDecibel, leftEarDecibel;
              if (dominance === 'left') {
                rightEarDecibel = 50;
                leftEarDecibel = 30;
              } else if (dominance === 'right') {
                rightEarDecibel = 30;
                leftEarDecibel = 50;
              }
              document.getElementById("rightEarDecibelField").value = rightEarDecibel;
              document.getElementById("leftEarDecibelField").value = leftEarDecibel;
              document.getElementById('rightEarDecibelDisplay').innerText = rightEarDecibel;
              document.getElementById('leftEarDecibelDisplay').innerText = leftEarDecibel;
            }
          });
        </script>

        <div>
          <button id="testButton" type="button" class="btn btn-info" onclick="calculateRightEarDecibel()">Test Right Ear Decibel Update</button>
          <p>DEBUG: Page Value: Right Ear Decibel: <span id="rightEarDecibelDisplay"></span></p>
          <p>DEBUG: Page Value: Left Ear Decibel: <span id="leftEarDecibelDisplay"></span></p>
          <p>DEBUG: Client Value: Right Ear Decibel: <%= @client.right_ear_decibel %></p>
          <p>DEBUG: Client Value: Left Ear Decibel: <%= @client.left_ear_decibel %></p>
          <p>DEBUG: Client Name - @client functioning check: <%= @client.first_name %></p>
        </div>

        <div>
          <%= link_to "Next", week_one_test_two_client_week_ones_path(@client), class: "btn btn-secondary" %>
        </div>
      </div>
    </div>
  </body>
</html>
